<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace를 "mapper.member"로 꼭 맞춰주기 -->
<mapper namespace="mapper.member">

	<!-- 아이디로 회원 정보 조회 -->
	<select id="selectMemberById" parameterType="String" resultType="memberVo"> <!-- modelConfig.xml에 등록한 memberVo 별칭 -->
    <![CDATA[
        SELECT
            id,
            pass,
            name,
            nick,
            contry,
            year,
            gender,
            email,
            tel,
            address,
            myLike,
            profileImg,
            follower,
            joindate,
            kakao_id,
            naver_id
        FROM
            member
		 WHERE
            id = #{id}
	]]>
	</select>
	
	<!-- 카카오 ID로 회원 정보 조회  -->
    <select id="selectMemberByKakaoId" parameterType="java.lang.String" resultType="com.harunichi.member.vo.MemberVo">
        <![CDATA[
        SELECT
            id,
            pass,
            name,
            nick,
            contry,
            year,
            gender,
            email,
            tel,
            address,
            myLike,
            profileImg,
            follower,
            joindate,
            kakao_id,
            naver_id
        FROM
            member
        WHERE
            kakao_id = #{kakaoId}
        ]]>
    </select>
    
	<!-- 네이버 ID로 회원 정보 조회  -->
    <select id="selectMemberByNaverId" parameterType="java.lang.String" resultType="com.harunichi.member.vo.MemberVo">
        <![CDATA[
        SELECT
            id,
            pass,
            name,
            nick,
            contry,
            year,
            gender,
            email,
            tel,
            address,
            myLike,
            profileImg,
            follower,
            joindate,
            kakao_id,
            naver_id
        FROM
            member
        WHERE
            naver_id = #{naverId}
        ]]>
    </select>
	
	<!-- 이메일로 회원 정보 조회 -->
	<select id="selectMemberByEmail" parameterType="string" resultType="com.harunichi.member.vo.MemberVo">
	    SELECT * FROM member WHERE email = #{email}
	</select>

	<!-- 아이디와 비밀번호로 회원 정보 조회 (로그인시 필요함) -->
	<select id="loginByIdAndPw" parameterType="java.util.Map" resultType="memberVo">
    <![CDATA[
        SELECT
            id,
            pass,
            name,
            nick,
            contry,
            year,
            gender,
            email,
            tel,
            address,
            myLike,
            profileImg,
            follower,
            joindate,
            kakao_id,
            naver_id
        FROM
            member
		 WHERE
            id = #{userId}
            AND pass = #{userPw}
	]]>
	</select>



	<!-- 회원 가입 쿼리 --> <!-- joindate(가입일)은 테이블 생성시 자동생성되므로, insert쿼리문에서 삭제했음 -->
	<insert id="insertMember" parameterType="com.harunichi.member.vo.MemberVo">
        <![CDATA[
        INSERT INTO member (
            id,
            pass,
            name,
            nick,
            contry,
            year,
            gender,
            email,
            tel,
            address,
            myLike,
            profileImg,
            follower,
            kakao_id,
            naver_id
        ) VALUES (
            #{id},
            #{pass},
            #{name},
            #{nick},
            #{contry},
            #{year},
            #{gender},
            #{email},
            #{tel},
            #{address},
            #{myLike},
            #{profileImg},
            #{follower},
            #{kakao_id},
            #{naver_id}
        )
        ]]>
	</insert>
	
	<select id="countById" parameterType="String" resultType="int">
    	SELECT COUNT(*) FROM member WHERE id = #{id}
	</select>
	
	<update id="updateMember" parameterType="com.harunichi.member.vo.MemberVo">
		<![CDATA[
		    UPDATE member
		    SET
		        pass = #{pass},
		        name = #{name},
		        nick = #{nick},
		        email = #{email},
		        year = #{year},
		        gender = #{gender},
		        tel = #{tel},
		        address = #{address},
		        contry = #{contry},
		        profileImg = #{profileImg},
		        myLike = #{myLike}
		    WHERE id = #{id}
		]]>
	</update>

</mapper>
