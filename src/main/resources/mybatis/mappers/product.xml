<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.product">

    <!-- 전체 상품 목록 조회 -->
    <select id="findAll" resultType="com.harunichi.product.vo.ProductVo">
        SELECT 
            p.*, 
            m.nick AS writerNick,
            m.profileImg AS writerProfileImg
        FROM product p
        LEFT JOIN member m ON p.productWriterId = m.id
        ORDER BY p.productDate DESC
    </select>

    <!-- 페이징 상품 목록 -->
    <select id="findPaged" resultType="com.harunichi.product.vo.ProductVo">
        SELECT 
            p.*, 
            m.nick AS writerNick,
            m.profileImg AS writerProfileImg
        FROM product p
        LEFT JOIN member m ON p.productWriterId = m.id
        ORDER BY p.productDate DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 단일 상품 조회 -->
    <select id="findById" parameterType="int" resultType="com.harunichi.product.vo.ProductVo">
        SELECT 
            p.*, 
            m.nick AS writerNick,
            m.profileImg AS writerProfileImg
        FROM product p
        LEFT JOIN member m ON p.productWriterId = m.id
        WHERE p.productId = #{productId}
    </select>

    <!-- 작성자의 다른 상품 목록 (현재 상품, 판매 완료 제외 + 페이징 ) -->
	<select id="findOtherByWriter" parameterType="map" resultType="com.harunichi.product.vo.ProductVo">
	    SELECT
	        p.*,
	        m.nick AS writerNick,
	        m.profileImg AS writerProfileImg
	    FROM product p
	    LEFT JOIN member m ON p.productWriterId = m.id
	    WHERE p.productWriterId = #{writerId}
	      AND p.productId != #{productId}
	      AND productStatus != -1
	    ORDER BY p.productDate DESC
	    LIMIT #{size} OFFSET #{offset}
    </select>

    <!-- 상품 등록 -->
    <insert id="insert" parameterType="com.harunichi.product.vo.ProductVo">
        INSERT INTO product (
            productTitle, productPrice, productStatus,
            productCategory, productContent, productDate,
            productImg, productCount, productWriterId
        ) VALUES (
            #{productTitle}, #{productPrice}, #{productStatus},
            #{productCategory}, #{productContent}, NOW(),
            #{productImg}, 0, #{productWriterId}
        )
    </insert>

    <!-- 상품 수정 -->
    <update id="update" parameterType="com.harunichi.product.vo.ProductVo">
        UPDATE product
        SET productTitle = #{productTitle},
            productPrice = #{productPrice},
            productStatus = #{productStatus},
            productCategory = #{productCategory},
            productContent = #{productContent},
            productImg = #{productImg}
        WHERE productId = #{productId}
    </update>

    <!-- 상품 삭제 -->
    <delete id="delete" parameterType="int">
        DELETE FROM product WHERE productId = #{productId}
    </delete>
    
    <!-- 상품 판매 완료 -->
    <update id="markAsSoldOut" parameterType="int">
    UPDATE product
    SET productStatus = -1
    WHERE productId = #{productId}
	</update>
	
	<!-- 내가 작성한 글 조회 -->
	<select id="selectProductsByWriterId" parameterType="string" resultType="com.harunichi.product.vo.ProductVo">
	    SELECT 
	        p.*, 
	        m.nick AS writerNick, 
	        m.profileImg AS writerProfileImg 
	    FROM product p
	    JOIN member m ON p.productWriterId = m.id
	    WHERE p.productWriterId = #{writerId}
	    ORDER BY p.productId DESC
	</select>
	
    <!-- 조회수 증가 -->
    <update id="incrementViewCount" parameterType="int">
        UPDATE product 
        SET productCount = productCount + 1 
        WHERE productId = #{productId}
    </update>

	<!-- 검색 + 필터 + 페이징 -->
	<select id="searchFiltered" parameterType="map" resultType="com.harunichi.product.vo.ProductVo">
	    SELECT 
	        p.*, 
	        m.nick AS writerNick,
	        m.profileImg AS writerProfileImg
	    FROM product p
	    LEFT JOIN member m ON p.productWriterId = m.id
	    WHERE 1=1
	    <if test="keyword != null and keyword != ''">
	        AND (p.productTitle LIKE CONCAT('%', #{keyword}, '%')
	          OR p.productContent LIKE CONCAT('%', #{keyword}, '%'))
	    </if>
	    <if test="category != null and category != ''">
	        AND p.productCategory = #{category}
	    </if>
	    <if test="status != null">
	        AND p.productStatus = #{status}
	    </if>
	    ORDER BY p.productDate DESC
	    LIMIT #{offset}, #{limit}
	</select>
	
	<!-- 조회수 높은 5개 상품  -->
	<select id="selectTopViewedProducts" resultType="com.harunichi.product.vo.ProductVo">
	    SELECT 
	        p.productId, 
	        p.productTitle, 
	        p.productPrice, 
	        p.productImg,
	        m.nick AS writerNick,
	        m.profileImg AS writerProfileImg
	    FROM product p
	    LEFT JOIN member m ON p.productWriterId = m.id
	    ORDER BY p.productCount DESC
	    LIMIT 5
	</select>


</mapper>
